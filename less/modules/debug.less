// Debug
.init() when (@debug_mode = true) {

    /**
     * Enable this stylesheet to visually detect any improperly nested or
     * potentially invalid markup, or any potentially inaccessible code.
     *
     * Red          ==      definite error
     * Yellow       ==      double-check
     * None         ==      should be fine
     *
     * Please note that this method of checking markup quality should not be relied
     * upon entirely. Validate your markup!
     */
    
    
    /**
     * Are there any empty elements in your page?
     */
    // :empty{
    //     outline:5px solid yellow;
    // }
    
    
    /**
     * Images require `alt` attributes, empty `alt`s are fine but should be
     * double-checked, no `alt` is bad and is flagged red.
     */
    // img{
    //     outline:5px solid red;
    // }
    // img[alt]{
    //     outline:none;
    // }
    // img[alt=""]{
    //     outline:5px solid yellow;
    // }
    
    
    /**
     * Links sometimes, though not always, benefit from `title` attributes. Links
     * without are never invalid but it’s a good idea to check.
     */
    // a{
    //     outline:5px solid yellow;
    // }
    // a[title]{
    //     outline:none;
    // }
    
    
    /**
     * Double-check any links whose `href` is something questionable.
     */
    // a[href="#"],
    // a[href*="javascript"]{
    //     outline:5px solid yellow;
    // }
    
    
    /**
     * The `target` attribute ain’t too nice...
     */
    // a[target]{
    //     outline:5px solid yellow;
    // }
    
    
    /**
     * Ensure any lists only contain `li`s as children.
     */
    // ul,
    // ol{
    //     > *:not(li){
    //         outline:5px solid red;
    //     }
    // }
    
    
    /**
     * It’s always nice to give `th`s `scope` attributes.
     */
    // th{
    //     outline:5px solid yellow;
    // }
    // th[scope]{
    //     outline:none;
    // }
    
    
    /**
     * `tr`s as children of `table`s ain’t great, did you need a `thead`/`tbody`?
     */
    // table > tr{
    //     outline:5px solid yellow;
    // }
    
    
    /**
     * `tfoot` needs to come *before* `tbody`.
     */
    // tbody + tfoot{
    //     outline:5px solid yellow;
    // }
    
    
    /**
     * Forms require `action` attributes
     */
    // form{
    //     outline:5px solid red;
    // }
    // form[action]{
    //     outline:none;
    // }
    
    
    /**
     * Various form-field types have required attributes. `input`s need `type`
     * attributes, `textarea`s need `rows` and `cols` attributes and submit buttons
     * need a `value` attribute.
     */
    // textarea,
    // input{
    //     outline:5px solid red;
    // }
    // input[type]{
    //     outline:none;
    // }
    // textarea[rows][cols]{
    //     outline:none;
    // }
    // input[type=submit]{
    //     outline:5px solid red;
    // }
    // input[type=submit][value]{
    //     outline:none;
    // }
    
    
    /**
     * Avoid inline styles where possible.
     */
    // [style]{
    //     outline:5px solid yellow;
    // }
    
    
    /**
     * You should avoid using IDs for CSS, is this doing any styling?
     */
    // [id]{
    // 	outline:5px solid yellow;
    // }
    
    
    /**
     * Are you using the grid system correctly?
     */
    // .gw > :not(.g),
    // .grid-wrapper > :not(.grid),
    // .gw--rev > :not(.g),
    // .grid-wrapper--rev > :not(.grid){
    // 	outline:5px solid red;
    // }
    
    
    // Media Query Tester
    // --------------------------------------------
    
    body:before { position:fixed; top:0; right:0; padding:15px; background:#00e9cf; color:#000; text-shadow: 0 1px 0 rgba(255,255,255,0.9); }
    
    .xxs() { body:before { content:"xxs"; } }
    .xs()  { body:before { content:"xs"; } }
    .s()   { body:before { content:"s"; } }
    .m()   { body:before { content:"m"; } }
    .l()   { body:before { content:"l"; } }
    .xl()  { body:before { content:"xl"; } }
    .xxl() { body:before { content:"xxl"; } }
    
    // .mq-tester { position:fixed; top:0; right:0; padding:15px; background:#00e9cf; color:#000; text-shadow: 0 1px 0 rgba(255,255,255,0.9); }
    
    // .xxs() { .mq-tester:before { content:"xxs"; } }
    // .xs()  { .mq-tester:before { content:"xs"; } }
    // .s()   { .mq-tester:before { content:"s"; } }
    // .m()   { .mq-tester:before { content:"m"; } }
    // .l()   { .mq-tester:before { content:"l"; } }
    // .xl()  { .mq-tester:before { content:"xl"; } }
    // .xxl() { .mq-tester:before { content:"xxl"; } }
    
    // .xs-down()  { .mq-tester:after { content:" / xs-down"; } }
    // .s-down()   { .mq-tester:after { content:" / s-down"; } }
    // .m-down()   { .mq-tester:after { content:" / m-down"; } }
    // .l-down()   { .mq-tester:after { content:" / l-down"; } }
    // .xl-down()  { .mq-tester:after { content:" / xl-down"; } }
    
    // .xs-up()  { .mq-tester:after { content:" / xs-up"; } }
    // .s-up()   { .mq-tester:after { content:" / s-up"; } }
    // .m-up()   { .mq-tester:after { content:" / m-up"; } }
    // .l-up()   { .mq-tester:after { content:" / l-up"; } }
    // .xl-up()  { .mq-tester:after { content:" / xl-up"; } }
    
    
    /* -------------------------------------------- */
    /* Background baseline                          */
    /* -------------------------------------------- */
    
    /** 
     * Baseline overlay by Basehold.it
     * A quick, painless, javascript-free baseline overlay.
     * by Dan Eden & Michael Wright
     * http://.basehold.it
     **/
    /**
     * Vertical rhythm baseline grid
     */
    body {
        position:relative;
    }
    
    body:after {
      background: url("http://basehold.it/image.php?height=@{line_height_base}") repeat scroll left top transparent;
        bottom: 0;
        content: "";
        display: block;
        height: auto;
        min-height:100%;
        left: 0;
        pointer-events: none;
        position: absolute;
        right: 0;
        top: 0;
        width: auto;
        z-index: 9999;
        opacity: 0.2;
        // opacity: 0;
    }
} // init